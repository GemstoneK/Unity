변수: 데이터를 메모리에 저장하는 장소 (상자)
---------------------------------------------------
변수의 종류(자료형)
int, float, string, bool
----------------------
정수형
int

실수형
float f를 꼭 붙여야한다.

문자열형
string ""

bool 형
true, false

----------------------------------
선언 : 변수의 타입과 이름을 정하는 것

초기화: 변수에 값을 저장하는 것 초기화

호출: 사용
------------------

주석
//
---------------------------
그룹형 변수: 변수들을 묶은 하나의 장소

배열: 가장 기본적인 고정형 그룹형 변수
1.중괄호 초기화
자료형[] 이름= {값1, 값2, 값3};

2. new 초기화 : 새롭게 변수를 만들겠다는 뜻
자료형[] 이름 = new 자료형[배열의 크기]
사용법
이름[번지수];



리스트: 기능이 추가된 가변형 그룹형 변수
List<자료형> 이름 = new List<자료형>(); 
- 꺾쇠 안에 데이터 타입을 정해줘야하는데 이것을 제네릭이라고 한다.

초기화 방법
이름.Add(값)

사용하는 방법
이름[번지수]

삭제하는 방법
items.RemoveAt(번지수);
-----------------------------
ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index
인덱스 오류

없는 번지수를 호출하면 인덱스 오류가 나온다.

삼항연산자
자료형 이름 = 불값 ? 참일때 값 : 거짓일때 값;

----------------------------------------------------------
키워드 : 프로그래밍 언어를 구성하는 특별한 단어
-------------------------------------------------
조건문

if
if(조건) {로직:참일 때만 수행}

swich, case: 변수의 값에 따라 로직 실행
switch (변수) {
case 값1:
로직;
break;
case 값2:
로직;
break;
case 값3:
로직;
break;
default: 모든 case를 통과한 후 실행
로직;
break;

case 값과 변수값과 비교할 때 쓰임
같은 로직을 쓸경우
case 값1:
case 값2:
로직
break;

------------------------------------------------------
반복문

while (불형식 조건) {
로직 반복}
조건에 맞으면 무한 반복

for(연산될 변수; 반복조건; 연산) {
로직
}
변수를 연산하면서 로직 반복실행

*그룹형 변수와의 궁합이 좋다.


그룹형 변수길이 .Length(배열), .Count(리스트)

foreach문: for문의 그룹형 변수 탐색 특화
-----------------------------------------------
함수 (메소드): 여러가지 기능을 편리하게 사용하도록 구성된 영역
우리가 게임을 실행할 때 아까까지 우리가 짰던 프로그램이 실행되는 이유가 바로 이 스타트라는 함수 안에서 구현을 했기 때문이다.

반환자료형 이름(받을 변수(자료형 + 이름))
{
로직
return 반환변수 혹은 값
}
어떤 값을 받아서 어떤 값을 내뱉는다.

함수 사용법
함수 이름(받는 변수이름)

간단한 함수 즉, 값을 받고 반환할 필요 없이 함수를 사용하기만 해도 값이 바뀌는 구조 만드는 방법
void 이름() {
로직
}
단, 전역변수를 사용해야만 한다.

지역변수 : 함수 안에서 선언된 변수
전역변수(멤버변수) : 함수 바깥에 선언된 변수 보통 가장 위에 선언한다.

----------------------------------------------------------------------------
클래스: 하나의 사물(오브젝트)와 대응하는 로직
class: 클래스 선언에 이용
유니티에서는 하나의 class 하나의 파일 이렇게 대응이 된다.

보통 배우 게임 오브젝트에 들어가는 몇가지 중요한 데이터를 멤버 변수로 만든다.
배우가 행동 할 수 있을만한 그런 일들을 멤버 함수로 만든다.

***클래스 사용법
클래스명 변수명 = new 키워드 클래스명()
클래스를 하나의 변수로 만든다. 이것을 인스턴스화라고 한다.

접근자
멤버 변수 앞에는 private(외부 클래스에 비공개로 설정하는 접근자)가 생략되어있다.
public: 외부 클래스에 공개로 설정하는 접근자
멤버 함수도 private 생략되있어서 public도 해야한다.

멤버변수는 0으로 초기화가 된다.
--------------------------------------
상속
배우가 용사 일수도 있고, 슬라임 일수 도 있고, 악마일 수도 있다.
배우라는 이 클래스를 가지고 또 다른 클래스를 만들 수도 있다.
원래 배우 클래스 안에 있는 멤버 변수와 멤버 함수가 플레이어 클래스가 그대로 물려받아서 사용할 수 있다.
즉, 배우 클래스는 부모 클래스가 되는 것이고, 플레이어 클래스는 자식클래스라고 한다.
자식 클래스는 부모 클래스의 모든 멤버 변수 멤버 함수를 사용할 수 있으며, 자기 자신 고유의 멤버 변수, 멤버 함수 또한 사용할 수 있다.

monobehavior : 유니티 게임 오브젝트 클래스